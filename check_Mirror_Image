public class Main
{
    static Node root1,root2;
    static Node pre = null;
    static class Node
    {
        int data;
        Node left;
        Node right;
        Node(int d){
            data = d;
            left = null;
            right = null;
        }
    }
    static void inorder(Node temp){
        if(temp == null)
            return;
        inorder(temp.left);
        System.out.print(temp.data+" ");
        inorder(temp.right);
    }
    static boolean checkMirror(Node root1, Node root2){
        if(root1==null && root2==null)
            return true;
        if(root1==null || root2==null)
            return false;
        if(root1.data==root2.data)
            return (checkMirror(root1.left,root2.right) && checkMirror(root1.right,root2.left));
        else 
            return false;
    }
    
	public static void main(String[] args) {
		root1 = new Node(6);
		root1.left = new Node(4);
		root1.right = new Node(8);
		root1.left.left = new Node(2);
		root1.left.left.left = new Node(1);
		root1.left.left.right = new Node(3);
		root1.left.right = new Node(5);
		root1.right.left = new Node(7);
		root1.right.right = new Node(9);
		
		root2 = new Node(6);
		root2.left = new Node(8);
		root2.left.left = new Node(9);
		root2.left.right = new Node(7);
		root2.right = new Node(4);
		root2.right.left = new Node(5);
		root2.right.right = new Node(2);
		root2.right.right.left = new Node(3);
		root2.right.right.right = new Node(1);
		
		System.out.println("Before mirror image ");
		inorder(root1);
		System.out.println("Before mirror image ");
		inorder(root2);
		boolean a =checkMirror(root1,root2);
		System.out.println(a);
	}
}
